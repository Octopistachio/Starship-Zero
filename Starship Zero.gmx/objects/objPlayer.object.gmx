<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>idleSpeed = .1; //Speed of image when player is NOT moving
walkSpeed = .5; //Speed of image when player IS moving

image_speed = idleSpeed; //Set the starting speed to the idle speed
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* Red Player */
with(objRed){
    if(objGame.playerTurnCounter == 0){
        if(!global.walking){ //If the player is walking
            if(sprite_index != sprRed) //If the sprite is not the idle sprite
                sprite_index = sprRed; //Set it to the idle sprite
            image_speed = idleSpeed; //Set the image speed to the idle speed
        }
        else{ //If the player is not walking
            if(sprite_index != sprRedWalking) //If the sprite is not the walking sprite
                sprite_index = sprRedWalking; //Set it to the walking sprite
            image_speed = walkSpeed; //Set the image speed to the walking speed
        }
    }
}

/* Yellow Player */
with(objYellow){
    if(objGame.playerTurnCounter == 1){
        if(!global.walking){
            if(sprite_index != sprYellow)
                sprite_index = sprYellow;
            image_speed = idleSpeed;
        }
        else{
            if(sprite_index != sprYellowWalking)
                sprite_index = sprYellowWalking;
            image_speed = walkSpeed;
        }
    }
}

/* Green Player */
with(objGreen){
    if(objGame.playerTurnCounter == 2){
        if(!global.walking){
            if(sprite_index != sprGreen)
                sprite_index = sprGreen;
            image_speed = idleSpeed;
        }
        else{
            if(sprite_index != sprGreenWalking)
                sprite_index = sprGreenWalking;
            image_speed = walkSpeed;
        }
    }
}

/* Blue Player */
with(objBlue){
    if(objGame.playerTurnCounter == 3){
        if(!global.walking){
            if(sprite_index != sprBlue)
                sprite_index = sprBlue;
            image_speed = idleSpeed;
        }
        else{
            if(sprite_index != sprBlueWalking)
                sprite_index = sprBlueWalking;
            image_speed = walkSpeed;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
